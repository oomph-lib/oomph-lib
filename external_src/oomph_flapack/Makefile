# Makefile.in generated by automake 1.16.5 from Makefile.am.
# external_src/oomph_flapack/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



###################################################
#   FORTRAN LAPACK sources
###################################################



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/oomph-lib
pkgincludedir = $(includedir)/oomph-lib
pkglibdir = $(libdir)/oomph-lib
pkglibexecdir = $(libexecdir)/oomph-lib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = external_src/oomph_flapack
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/configure.ac_scripts/automake_init_command_file \
	$(top_srcdir)/config/configure.ac_scripts/makefile_list \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
liboomph_flapack_la_DEPENDENCIES =
am__objects_1 = dummy.lo cbdsqr.lo cpptrf.lo dlaqps.lo sbdsdc.lo \
	sorm2l.lo zhetrf.lo cgbbrd.lo cpptri.lo dlaqr0.lo sbdsqr.lo \
	sorm2r.lo zhetri.lo cgbcon.lo cpptrs.lo dlaqr1.lo scsum1.lo \
	sormbr.lo zhetrs.lo cgbequ.lo cptcon.lo dlaqr2.lo sdisna.lo \
	sormhr.lo zhgeqz.lo cgbrfs.lo cpteqr.lo dlaqr3.lo sgbbrd.lo \
	sorml2.lo zhpcon.lo cgbsv.lo cptrfs.lo dlaqr4.lo sgbcon.lo \
	sormlq.lo zhpevd.lo cgbsvx.lo cptsv.lo dlaqr5.lo sgbequ.lo \
	sormql.lo zhpev.lo cgbtf2.lo cptsvx.lo dlaqsb.lo sgbrfs.lo \
	sormqr.lo zhpevx.lo cgbtrf.lo cpttrf.lo dlaqsp.lo sgbsv.lo \
	sormr2.lo zhpgst.lo cgbtrs.lo cpttrs.lo dlaqsy.lo sgbsvx.lo \
	sormr3.lo zhpgvd.lo cgebak.lo cptts2.lo dlaqtr.lo sgbtf2.lo \
	sormrq.lo zhpgv.lo cgebal.lo crot.lo dlar1v.lo sgbtrf.lo \
	sormrz.lo zhpgvx.lo cgebd2.lo cspcon.lo dlar2v.lo sgbtrs.lo \
	sormtr.lo zhprfs.lo cgebrd.lo cspmv.lo dlaran.lo sgebak.lo \
	spbcon.lo zhpsv.lo cgecon.lo cspr.lo dlarfb.lo sgebal.lo \
	spbequ.lo zhpsvx.lo cgeequ.lo csprfs.lo dlarf.lo sgebd2.lo \
	spbrfs.lo zhptrd.lo cgees.lo cspsv.lo dlarfg.lo sgebrd.lo \
	spbstf.lo zhptrf.lo cgeesx.lo cspsvx.lo dlarft.lo sgecon.lo \
	spbsv.lo zhptri.lo cgeev.lo csptrf.lo dlarfx.lo sgeequ.lo \
	spbsvx.lo zhptrs.lo cgeevx.lo csptri.lo dlargv.lo sgees.lo \
	spbtf2.lo zhsein.lo cgegs.lo csptrs.lo dlarnd.lo sgeesx.lo \
	spbtrf.lo zhseqr.lo cgegv.lo csrot.lo dlarnv.lo sgeev.lo \
	spbtrs.lo zlabrd.lo cgehd2.lo csrscl.lo dlarra.lo sgeevx.lo \
	spocon.lo zlacgv.lo cgehrd.lo cstedc.lo dlarrb.lo sgegs.lo \
	spoequ.lo zlacn2.lo cgelq2.lo cstegr.lo dlarrc.lo sgegv.lo \
	sporfs.lo zlacon.lo cgelqf.lo cstein.lo dlarrd.lo sgehd2.lo \
	sposv.lo zlacp2.lo cgelsd.lo cstemr.lo dlarre.lo sgehrd.lo \
	sposvx.lo zlacpy.lo cgels.lo csteqr.lo dlarrf.lo sgelq2.lo \
	spotf2.lo zlacrm.lo cgelss.lo csycon.lo dlarrj.lo sgelqf.lo \
	spotrf.lo zlacrt.lo cgelsx.lo csymv.lo dlarrk.lo sgelsd.lo \
	spotri.lo zladiv.lo cgelsy.lo csyr.lo dlarrr.lo sgels.lo \
	spotrs.lo zlaed0.lo cgeql2.lo csyrfs.lo dlarrv.lo sgelss.lo \
	sppcon.lo zlaed7.lo cgeqlf.lo csysv.lo dlartg.lo sgelsx.lo \
	sppequ.lo zlaed8.lo cgeqp3.lo csysvx.lo dlartv.lo sgelsy.lo \
	spprfs.lo zlaein.lo cgeqpf.lo csytf2.lo dlaruv.lo sgeql2.lo \
	sppsv.lo zlaesy.lo cgeqr2.lo csytrf.lo dlarzb.lo sgeqlf.lo \
	sppsvx.lo zlaev2.lo cgeqrf.lo csytri.lo dlarz.lo sgeqp3.lo \
	spptrf.lo zlag2c.lo cgerfs.lo csytrs.lo dlarzt.lo sgeqpf.lo \
	spptri.lo zlags2.lo cgerq2.lo ctbcon.lo dlas2.lo sgeqr2.lo \
	spptrs.lo zlagtm.lo cgerqf.lo ctbrfs.lo dlascl.lo sgeqrf.lo \
	sptcon.lo zlahef.lo cgesc2.lo ctbtrs.lo dlasd0.lo sgerfs.lo \
	spteqr.lo zlahqr.lo cgesdd.lo ctgevc.lo dlasd1.lo sgerq2.lo \
	sptrfs.lo zlahr2.lo cgesvd.lo ctgex2.lo dlasd2.lo sgerqf.lo \
	sptsv.lo zlahrd.lo cgesv.lo ctgexc.lo dlasd3.lo sgesc2.lo \
	sptsvx.lo zlaic1.lo cgesvx.lo ctgsen.lo dlasd4.lo sgesdd.lo \
	spttrf.lo zlals0.lo cgetc2.lo ctgsja.lo dlasd5.lo sgesvd.lo \
	spttrs.lo zlalsa.lo cgetf2.lo ctgsna.lo dlasd6.lo sgesv.lo \
	sptts2.lo zlalsd.lo cgetrf.lo ctgsy2.lo dlasd7.lo sgesvx.lo \
	srscl.lo zlangb.lo cgetri.lo ctgsyl.lo dlasd8.lo sgetc2.lo \
	ssbevd.lo zlange.lo cgetrs.lo ctpcon.lo dlasda.lo sgetf2.lo \
	ssbev.lo zlangt.lo cggbak.lo ctprfs.lo dlasdq.lo sgetrf.lo \
	ssbevx.lo zlanhb.lo cggbal.lo ctptri.lo dlasdt.lo sgetri.lo \
	ssbgst.lo zlanhe.lo cgges.lo ctptrs.lo dlaset.lo sgetrs.lo \
	ssbgvd.lo zlanhp.lo cggesx.lo ctrcon.lo dlasq1.lo sggbak.lo \
	ssbgv.lo zlanhs.lo cggev.lo ctrevc.lo dlasq2.lo sggbal.lo \
	ssbgvx.lo zlanht.lo cggevx.lo ctrexc.lo dlasq3.lo sgges.lo \
	ssbtrd.lo zlansb.lo cggglm.lo ctrrfs.lo dlasq4.lo sggesx.lo \
	sspcon.lo zlansp.lo cgghrd.lo ctrsen.lo dlasq5.lo sggev.lo \
	sspevd.lo zlansy.lo cgglse.lo ctrsna.lo dlasq6.lo sggevx.lo \
	sspev.lo zlantb.lo cggqrf.lo ctrsyl.lo dlasr.lo sggglm.lo \
	sspevx.lo zlantp.lo cggrqf.lo ctrti2.lo dlasrt.lo sgghrd.lo \
	sspgst.lo zlantr.lo cggsvd.lo ctrtri.lo dlassq.lo sgglse.lo \
	sspgvd.lo zlapll.lo cggsvp.lo ctrtrs.lo dlasv2.lo sggqrf.lo \
	sspgv.lo zlapmt.lo cgtcon.lo ctzrqf.lo dlaswp.lo sggrqf.lo \
	sspgvx.lo zlaqgb.lo cgtrfs.lo ctzrzf.lo dlasy2.lo sggsvd.lo \
	ssprfs.lo zlaqge.lo cgtsv.lo cung2l.lo dlasyf.lo sggsvp.lo \
	sspsv.lo zlaqhb.lo cgtsvx.lo cung2r.lo dlatbs.lo sgtcon.lo \
	sspsvx.lo zlaqhe.lo cgttrf.lo cungbr.lo dlatdf.lo sgtrfs.lo \
	ssptrd.lo zlaqhp.lo cgttrs.lo cunghr.lo dlatps.lo sgtsv.lo \
	ssptrf.lo zlaqp2.lo cgtts2.lo cungl2.lo dlatrd.lo sgtsvx.lo \
	ssptri.lo zlaqps.lo chbevd.lo cunglq.lo dlatrs.lo sgttrf.lo \
	ssptrs.lo zlaqr0.lo chbev.lo cungql.lo dlatrz.lo sgttrs.lo \
	sstebz.lo zlaqr1.lo chbevx.lo cungqr.lo dlatzm.lo sgtts2.lo \
	sstedc.lo zlaqr2.lo chbgst.lo cungr2.lo dlauu2.lo shgeqz.lo \
	sstegr.lo zlaqr3.lo chbgvd.lo cungrq.lo dlauum.lo shsein.lo \
	sstein.lo zlaqr4.lo chbgv.lo cungtr.lo dlazq3.lo shseqr.lo \
	sstemr.lo zlaqr5.lo chbgvx.lo cunm2l.lo dlazq4.lo sisnan.lo \
	ssteqr.lo zlaqsb.lo chbtrd.lo cunm2r.lo dopgtr.lo slabad.lo \
	ssterf.lo zlaqsp.lo checon.lo cunmbr.lo dopmtr.lo slabrd.lo \
	sstevd.lo zlaqsy.lo cheevd.lo cunmhr.lo dorg2l.lo slacn2.lo \
	sstev.lo zlar1v.lo cheev.lo cunml2.lo dorg2r.lo slacon.lo \
	sstevr.lo zlar2v.lo cheevr.lo cunmlq.lo dorgbr.lo slacpy.lo \
	sstevx.lo zlarcm.lo cheevx.lo cunmql.lo dorghr.lo sladiv.lo \
	ssycon.lo zlarfb.lo chegs2.lo cunmqr.lo dorgl2.lo slae2.lo \
	ssyevd.lo zlarf.lo chegst.lo cunmr2.lo dorglq.lo slaebz.lo \
	ssyev.lo zlarfg.lo chegvd.lo cunmr3.lo dorgql.lo slaed0.lo \
	ssyevr.lo zlarft.lo chegv.lo cunmrq.lo dorgqr.lo slaed1.lo \
	ssyevx.lo zlarfx.lo chegvx.lo cunmrz.lo dorgr2.lo slaed2.lo \
	ssygs2.lo zlargv.lo cherfs.lo cunmtr.lo dorgrq.lo slaed3.lo \
	ssygst.lo zlarnv.lo chesv.lo cupgtr.lo dorgtr.lo slaed4.lo \
	ssygvd.lo zlarrv.lo chesvx.lo cupmtr.lo dorm2l.lo slaed5.lo \
	ssygv.lo zlartg.lo chetd2.lo dbdsdc.lo dorm2r.lo slaed6.lo \
	ssygvx.lo zlartv.lo chetf2.lo dbdsqr.lo dormbr.lo slaed7.lo \
	ssyrfs.lo zlarzb.lo chetrd.lo ddisna.lo dormhr.lo slaed8.lo \
	ssysv.lo zlarz.lo chetrf.lo dgbbrd.lo dorml2.lo slaed9.lo \
	ssysvx.lo zlarzt.lo chetri.lo dgbcon.lo dormlq.lo slaeda.lo \
	ssytd2.lo zlascl.lo chetrs.lo dgbequ.lo dormql.lo slaein.lo \
	ssytf2.lo zlaset.lo chgeqz.lo dgbrfs.lo dormqr.lo slaev2.lo \
	ssytrd.lo zlasr.lo chpcon.lo dgbsv.lo dormr2.lo slaexc.lo \
	ssytrf.lo zlassq.lo chpevd.lo dgbsvx.lo dormr3.lo slag2d.lo \
	ssytri.lo zlaswp.lo chpev.lo dgbtf2.lo dormrq.lo slag2.lo \
	ssytrs.lo zlasyf.lo chpevx.lo dgbtrf.lo dormrz.lo slags2.lo \
	stbcon.lo zlatbs.lo chpgst.lo dgbtrs.lo dormtr.lo slagtf.lo \
	stbrfs.lo zlatdf.lo chpgvd.lo dgebak.lo dpbcon.lo slagtm.lo \
	stbtrs.lo zlatps.lo chpgv.lo dgebal.lo dpbequ.lo slagts.lo \
	stgevc.lo zlatrd.lo chpgvx.lo dgebd2.lo dpbrfs.lo slagv2.lo \
	stgex2.lo zlatrs.lo chprfs.lo dgebrd.lo dpbstf.lo slahqr.lo \
	stgexc.lo zlatrz.lo chpsv.lo dgecon.lo dpbsv.lo slahr2.lo \
	stgsen.lo zlatzm.lo chpsvx.lo dgeequ.lo dpbsvx.lo slahrd.lo \
	stgsja.lo zlauu2.lo chptrd.lo dgees.lo dpbtf2.lo slaic1.lo \
	stgsna.lo zlauum.lo chptrf.lo dgeesx.lo dpbtrf.lo slaisnan.lo \
	stgsy2.lo zmach.lo chptri.lo dgeev.lo dpbtrs.lo slaln2.lo \
	stgsyl.lo zpbcon.lo chptrs.lo dgeevx.lo dpocon.lo slals0.lo \
	stpcon.lo zpbequ.lo chsein.lo dgegs.lo dpoequ.lo slalsa.lo \
	stprfs.lo zpbrfs.lo chseqr.lo dgegv.lo dporfs.lo slalsd.lo \
	stptri.lo zpbstf.lo clabrd.lo dgehd2.lo dposv.lo slamch.lo \
	stptrs.lo zpbsv.lo clacgv.lo dgehrd.lo dposvx.lo slamrg.lo \
	strcon.lo zpbsvx.lo clacn2.lo dgelq2.lo dpotf2.lo slaneg.lo \
	strevc.lo zpbtf2.lo clacon.lo dgelqf.lo dpotrf.lo slangb.lo \
	strexc.lo zpbtrf.lo clacp2.lo dgelsd.lo dpotri.lo slange.lo \
	strrfs.lo zpbtrs.lo clacpy.lo dgels.lo dpotrs.lo slangt.lo \
	strsen.lo zpocon.lo clacrm.lo dgelss.lo dppcon.lo slanhs.lo \
	strsna.lo zpoequ.lo clacrt.lo dgelsx.lo dppequ.lo slansb.lo \
	strsyl.lo zporfs.lo cladiv.lo dgelsy.lo dpprfs.lo slansp.lo \
	strti2.lo zposv.lo claed0.lo dgeql2.lo dppsv.lo slanst.lo \
	strtri.lo zposvx.lo claed7.lo dgeqlf.lo dppsvx.lo slansy.lo \
	strtrs.lo zpotf2.lo claed8.lo dgeqp3.lo dpptrf.lo slantb.lo \
	stzrqf.lo zpotrf.lo claein.lo dgeqpf.lo dpptri.lo slantp.lo \
	stzrzf.lo zpotri.lo claesy.lo dgeqr2.lo dpptrs.lo slantr.lo \
	xerbla.lo zpotrs.lo claev2.lo dgeqrf.lo dptcon.lo slanv2.lo \
	xlaenv.lo zppcon.lo clag2z.lo dgerfs.lo dpteqr.lo slapll.lo \
	zbdsqr.lo zppequ.lo clags2.lo dgerq2.lo dptrfs.lo slapmt.lo \
	zcgesv.lo zpprfs.lo clagtm.lo dgerqf.lo dptsv.lo slaptm.lo \
	zdrot.lo zppsv.lo clahef.lo dgesc2.lo dptsvx.lo slapy2.lo \
	zdrscl.lo zppsvx.lo clahqr.lo dgesdd.lo dpttrf.lo slapy3.lo \
	zdscal.lo zpptrf.lo clahr2.lo dgesvd.lo dpttrs.lo slaqgb.lo \
	zgbbrd.lo zpptri.lo clahrd.lo dgesv.lo dptts2.lo slaqge.lo \
	zgbcon.lo zpptrs.lo claic1.lo dgesvx.lo drscl.lo slaqp2.lo \
	zgbequ.lo zptcon.lo clals0.lo dgetc2.lo dsbevd.lo slaqps.lo \
	zgbrfs.lo zpteqr.lo clalsa.lo dgetf2.lo dsbev.lo slaqr0.lo \
	zgbsv.lo zptrfs.lo clalsd.lo dgetrf.lo dsbevx.lo slaqr1.lo \
	zgbsvx.lo zptsv.lo clangb.lo dgetri.lo dsbgst.lo slaqr2.lo \
	zgbtf2.lo zptsvx.lo clange.lo dgetrs.lo dsbgvd.lo slaqr3.lo \
	zgbtrf.lo zpttrf.lo clangt.lo dggbak.lo dsbgv.lo slaqr4.lo \
	zgbtrs.lo zpttrs.lo clanhb.lo dggbal.lo dsbgvx.lo slaqr5.lo \
	zgebak.lo zptts2.lo clanhe.lo dgges.lo dsbtrd.lo slaqsb.lo \
	zgebal.lo zrot.lo clanhp.lo dggesx.lo dsgesv.lo slaqsp.lo \
	zgebd2.lo zspcon.lo clanhs.lo dggev.lo dspcon.lo slaqsy.lo \
	zgebrd.lo zspmv.lo clanht.lo dggevx.lo dspevd.lo slaqtr.lo \
	zgecon.lo zspr.lo clansb.lo dggglm.lo dspev.lo slar1v.lo \
	zgeequ.lo zsprfs.lo clansp.lo dgghrd.lo dspevx.lo slar2v.lo \
	zgees.lo zspsv.lo clansy.lo dgglse.lo dspgst.lo slaran.lo \
	zgeesx.lo zspsvx.lo clantb.lo dggqrf.lo dspgvd.lo slarfb.lo \
	zgeev.lo zsptrf.lo clantp.lo dggrqf.lo dspgv.lo slarf.lo \
	zgeevx.lo zsptri.lo clantr.lo dggsvd.lo dspgvx.lo slarfg.lo \
	zgegs.lo zsptrs.lo clapll.lo dggsvp.lo dsprfs.lo slarft.lo \
	zgegv.lo zstedc.lo clapmt.lo dgtcon.lo dspsv.lo slarfx.lo \
	zgehd2.lo zstegr.lo claqgb.lo dgtrfs.lo dspsvx.lo slargv.lo \
	zgehrd.lo zstein.lo claqge.lo dgtsv.lo dsptrd.lo slarnd.lo \
	zgelq2.lo zstemr.lo claqhb.lo dgtsvx.lo dsptrf.lo slarnv.lo \
	zgelqf.lo zsteqr.lo claqhe.lo dgttrf.lo dsptri.lo slarra.lo \
	zgelsd.lo zsycon.lo claqhp.lo dgttrs.lo dsptrs.lo slarrb.lo \
	zgels.lo zsymv.lo claqp2.lo dgtts2.lo dstebz.lo slarrc.lo \
	zgelss.lo zsyr.lo claqps.lo dhgeqz.lo dstedc.lo slarrd.lo \
	zgelsx.lo zsyrfs.lo claqr0.lo dhsein.lo dstegr.lo slarre.lo \
	zgelsy.lo zsysv.lo claqr1.lo dhseqr.lo dstein.lo slarrf.lo \
	zgeql2.lo zsysvx.lo claqr2.lo disnan.lo dstemr.lo slarrj.lo \
	zgeqlf.lo zsytf2.lo claqr3.lo dlabad.lo dsteqr.lo slarrk.lo \
	zgeqp3.lo zsytrf.lo claqr4.lo dlabrd.lo dsterf.lo slarrr.lo \
	zgeqpf.lo zsytri.lo claqr5.lo dlacn2.lo dstevd.lo slarrv.lo \
	zgeqr2.lo zsytrs.lo claqsb.lo dlacon.lo dstev.lo slartg.lo \
	zgeqrf.lo ztbcon.lo claqsp.lo dlacpy.lo dstevr.lo slartv.lo \
	zgerfs.lo ztbrfs.lo claqsy.lo dladiv.lo dstevx.lo slaruv.lo \
	zgerq2.lo ztbtrs.lo clar1v.lo dlae2.lo dsycon.lo slarzb.lo \
	zgerqf.lo ztgevc.lo clar2v.lo dlaebz.lo dsyevd.lo slarz.lo \
	zgesc2.lo ztgex2.lo clarcm.lo dlaed0.lo dsyev.lo slarzt.lo \
	zgesdd.lo ztgexc.lo clarfb.lo dlaed1.lo dsyevr.lo slas2.lo \
	zgesvd.lo ztgsen.lo clarf.lo dlaed2.lo dsyevx.lo slascl.lo \
	zgesv.lo ztgsja.lo clarfg.lo dlaed3.lo dsygs2.lo slasd0.lo \
	zgesvx.lo ztgsna.lo clarft.lo dlaed4.lo dsygst.lo slasd1.lo \
	zgetc2.lo ztgsy2.lo clarfx.lo dlaed5.lo dsygvd.lo slasd2.lo \
	zgetf2.lo ztgsyl.lo clargv.lo dlaed6.lo dsygv.lo slasd3.lo \
	zgetrf.lo ztpcon.lo clarnv.lo dlaed7.lo dsygvx.lo slasd4.lo \
	zgetri.lo ztprfs.lo clarrv.lo dlaed8.lo dsyrfs.lo slasd5.lo \
	zgetrs.lo ztptri.lo clartg.lo dlaed9.lo dsysv.lo slasd6.lo \
	zggbak.lo ztptrs.lo clartv.lo dlaeda.lo dsysvx.lo slasd7.lo \
	zggbal.lo ztrcon.lo clarzb.lo dlaein.lo dsytd2.lo slasd8.lo \
	zgges.lo ztrevc.lo clarz.lo dlaev2.lo dsytf2.lo slasda.lo \
	zggesx.lo ztrexc.lo clarzt.lo dlaexc.lo dsytrd.lo slasdq.lo \
	zggev.lo ztrrfs.lo clascl.lo dlag2.lo dsytrf.lo slasdt.lo \
	zggevx.lo ztrsen.lo claset.lo dlag2s.lo dsytri.lo slaset.lo \
	zggglm.lo ztrsna.lo clasr.lo dlags2.lo dsytrs.lo slasq1.lo \
	zgghrd.lo ztrsyl.lo classq.lo dlagtf.lo dtbcon.lo slasq2.lo \
	zgglse.lo ztrti2.lo claswp.lo dlagtm.lo dtbrfs.lo slasq3.lo \
	zggqrf.lo ztrtri.lo clasyf.lo dlagts.lo dtbtrs.lo slasq4.lo \
	zggrqf.lo ztrtrs.lo clatbs.lo dlagv2.lo dtgevc.lo slasq5.lo \
	zggsvd.lo ztzrqf.lo clatdf.lo dlahqr.lo dtgex2.lo slasq6.lo \
	zggsvp.lo ztzrzf.lo clatps.lo dlahr2.lo dtgexc.lo slasr.lo \
	zgtcon.lo zung2l.lo clatrd.lo dlahrd.lo dtgsen.lo slasrt.lo \
	zgtrfs.lo zung2r.lo clatrs.lo dlaic1.lo dtgsja.lo slassq.lo \
	zgtsv.lo zungbr.lo clatrz.lo dlaisnan.lo dtgsna.lo slasv2.lo \
	zgtsvx.lo zunghr.lo clatzm.lo dlaln2.lo dtgsy2.lo slaswp.lo \
	zgttrf.lo zungl2.lo clauu2.lo dlals0.lo dtgsyl.lo slasy2.lo \
	zgttrs.lo zunglq.lo clauum.lo dlalsa.lo dtpcon.lo slasyf.lo \
	zgtts2.lo zungql.lo cmach.lo dlalsd.lo dtprfs.lo slatbs.lo \
	zhbevd.lo zungqr.lo cpbcon.lo dlamch.lo dtptri.lo slatdf.lo \
	zhbev.lo zungr2.lo cpbequ.lo dlamrg.lo dtptrs.lo slatps.lo \
	zhbevx.lo zungrq.lo cpbrfs.lo dlaneg.lo dtrcon.lo slatrd.lo \
	zhbgst.lo zungtr.lo cpbstf.lo dlangb.lo dtrevc.lo slatrs.lo \
	zhbgvd.lo zunm2l.lo cpbsv.lo dlange.lo dtrexc.lo slatrz.lo \
	zhbgv.lo zunm2r.lo cpbsvx.lo dlangt.lo dtrrfs.lo slatzm.lo \
	zhbgvx.lo zunmbr.lo cpbtf2.lo dlanhs.lo dtrsen.lo slauu2.lo \
	zhbtrd.lo zunmhr.lo cpbtrf.lo dlansb.lo dtrsna.lo slauum.lo \
	zhecon.lo zunml2.lo cpbtrs.lo dlansp.lo dtrsyl.lo slazq3.lo \
	zheevd.lo zunmlq.lo cpocon.lo dlanst.lo dtrti2.lo slazq4.lo \
	zheev.lo zunmql.lo cpoequ.lo dlansy.lo dtrtri.lo sopgtr.lo \
	zheevr.lo zunmqr.lo cporfs.lo dlantb.lo dtrtrs.lo sopmtr.lo \
	zheevx.lo zunmr2.lo cposv.lo dlantp.lo dtzrqf.lo sorg2l.lo \
	zhegs2.lo zunmr3.lo cposvx.lo dlantr.lo dtzrzf.lo sorg2r.lo \
	zhegst.lo zunmrq.lo cpotf2.lo dlanv2.lo dzsum1.lo sorgbr.lo \
	zhegvd.lo zunmrz.lo cpotrf.lo dlapll.lo icmax1.lo sorghr.lo \
	zhegv.lo zunmtr.lo cpotri.lo dlapmt.lo ieeeck.lo sorgl2.lo \
	zhegvx.lo zupgtr.lo cpotrs.lo dlaptm.lo ilaenv.lo sorglq.lo \
	zherfs.lo zupmtr.lo cppcon.lo dlapy2.lo ilaver.lo sorgql.lo \
	zhesv.lo cppequ.lo dlapy3.lo iparmq.lo sorgqr.lo zhesvx.lo \
	cpprfs.lo dlaqgb.lo izmax1.lo sorgr2.lo zhetd2.lo cppsv.lo \
	dlaqge.lo lsame.lo sorgrq.lo zhetf2.lo cppsvx.lo dlaqp2.lo \
	lsamen.lo sorgtr.lo zhetrd.lo clarnd.lo zlarnd.lo
am__objects_2 = $(am__objects_1)
am_liboomph_flapack_la_OBJECTS = $(am__objects_2)
liboomph_flapack_la_OBJECTS = $(am_liboomph_flapack_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/dummy.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_$(V))
am__v_F77_ = $(am__v_F77_$(AM_DEFAULT_VERBOSITY))
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_$(V))
am__v_F77LD_ = $(am__v_F77LD_$(AM_DEFAULT_VERBOSITY))
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liboomph_flapack_la_SOURCES)
DIST_SOURCES = $(liboomph_flapack_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/runner/work/oomph-lib/oomph-lib/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_CPPFLAGS = -isystem /home/runner/work/oomph-lib/oomph-lib/external_distributions/boost/boost_default_installation/include -DOOMPH_HAS_BOOST -isystem /home/runner/work/oomph-lib/oomph-lib/external_distributions/gmp/gmp_default_installation/include -DOOMPH_HAS_GMP -isystem /home/runner/work/oomph-lib/oomph-lib/external_distributions/mpfr/mpfr_default_installation/include -DOOMPH_HAS_MPFR -isystem /home/runner/work/oomph-lib/oomph-lib/external_distributions/cgal/cgal_default_installation/include -DOOMPH_HAS_CGAL -DOOMPH_HAS_STACKTRACE -DOOMPH_HAS_UNISTDH -DOOMPH_HAS_FPUCONTROLH -DOOMPH_HAS_MALLOCH -DOOMPH_HAS_TRIANGLE_LIB -DOOMPH_HAS_TETGEN_LIB -DUSING_OOMPH_SUPERLU -DUSING_OOMPH_SUPERLU_DIST
AM_CXXFLAGS = -DgFortran
AM_DEFAULT_VERBOSITY = 1
AM_FFLAGS = 
AM_LDFLAGS = -L/home/runner/work/oomph-lib/oomph-lib/external_distributions/boost/boost_default_installation/lib -Wl,-rpath,/home/runner/work/oomph-lib/oomph-lib/external_distributions/boost/boost_default_installation/lib -L/home/runner/work/oomph-lib/oomph-lib/external_distributions/gmp/gmp_default_installation/lib -L/home/runner/work/oomph-lib/oomph-lib/external_distributions/mpfr/mpfr_default_installation/lib -L/home/runner/work/oomph-lib/oomph-lib/external_distributions/cgal/cgal_default_installation/lib -Wl,-rpath,/home/runner/work/oomph-lib/oomph-lib/external_distributions/cgal/cgal_default_installation/lib
AR = ar
AUTOCONF = ${SHELL} '/home/runner/work/oomph-lib/oomph-lib/missing' autoconf
AUTOHEADER = ${SHELL} '/home/runner/work/oomph-lib/oomph-lib/missing' autoheader
AUTOMAKE = ${SHELL} '/home/runner/work/oomph-lib/oomph-lib/missing' automake-1.16
AWK = gawk
BLACS_LIB = 
BLAS_LIB = 
BOOST_DIR = /home/runner/work/oomph-lib/oomph-lib/external_distributions/boost/boost_default_installation
BOOST_INCLUDE = /home/runner/work/oomph-lib/oomph-lib/external_distributions/boost/boost_default_installation/include
BOOST_LIB = /home/runner/work/oomph-lib/oomph-lib/external_distributions/boost/boost_default_installation/lib
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -Wall
CGAL_DIR = /home/runner/work/oomph-lib/oomph-lib/external_distributions/cgal/cgal_default_installation
CGAL_INCLUDE = /home/runner/work/oomph-lib/oomph-lib/external_distributions/cgal/cgal_default_installation/include
CGAL_LIB = /home/runner/work/oomph-lib/oomph-lib/external_distributions/cgal/cgal_default_installation/lib
CGAL_PERMANENT_INSTALLATION_DIR = 
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -DPARANOID -Wall
CXXLD = $(CXX)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
EXTERNAL_LIBS = -lpthread -lboost_thread -lboost_system -lgmp -lmpfr -lCGAL_Core -lCGAL -loomph_hsl -loomph_crbond_bessel -loomph_triangle -loomph_tetgen -loomph_superlu_4.3 -loomph_metis_from_parmetis_3.1.1 -loomph_lapack -loomph_flapack -loomph_blas
F77 = f77
FC = gfortran
FCFLAGS = -g -O2
FFLAGS = -fallow-argument-mismatch -g -Wall
FFLAGS_NO_OPT = -O0
FGREP = /usr/bin/grep -F
FLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. -lgfortran -lm -lquadmath
GMP_DIR = /home/runner/work/oomph-lib/oomph-lib/external_distributions/gmp/gmp_default_installation
GMP_INCLUDE = /home/runner/work/oomph-lib/oomph-lib/external_distributions/gmp/gmp_default_installation/include
GMP_LIB = /home/runner/work/oomph-lib/oomph-lib/external_distributions/gmp/gmp_default_installation/lib
GMSH_RUN_COMMAND = 
GREP = /usr/bin/grep
HLIB_INCLUDE = 
HLIB_LIB = 
HYPRE_INCLUDE = 
HYPRE_LIB = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LAPACK_LIB = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/home/runner/work/oomph-lib/oomph-lib/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MPFR_DIR = /home/runner/work/oomph-lib/oomph-lib/external_distributions/mpfr/mpfr_default_installation
MPFR_INCLUDE = /home/runner/work/oomph-lib/oomph-lib/external_distributions/mpfr/mpfr_default_installation/include
MPFR_LIB = /home/runner/work/oomph-lib/oomph-lib/external_distributions/mpfr/mpfr_default_installation/lib
MPI_INCLUDE_DIRECTORY = 
MPI_RUN_COMMAND = 
MPI_VARIABLENP_RUN_COMMAND = 
MUMPS_AND_SCALAPACK_INCLUDE = 
MUMPS_AND_SCALAPACK_LIB = 
MUMPS_INCLUDE = 
MUMPS_LIB = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = oomph-lib
PACKAGE_BUGREPORT = oomph-lib@maths.manchester.ac.uk
PACKAGE_NAME = oomph-lib
PACKAGE_STRING = oomph-lib 1.0.0000
PACKAGE_TARNAME = oomph-lib
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0000
PATH_SEPARATOR = :
PORD_LIB = 
PRIVATE_DIR = 
PRIVATE_SUBDIRECTORIES = 
PRIVATE_USER_DRIVER_SUBDIRECTORIES = 
PRIVATE_USER_SRC_SUBDIRECTORIES = 
RANLIB = ranlib
SCALAPACK_LIB = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TRILINOS_INCLUDE = 
TRILINOS_LIB = 
USER_DRIVERS_SUBDIRECTORIES = jack_cool/ joe_cool/
USER_SRC_SUBDIRECTORIES = jack_cool/
VERSION = 1.0.0000
WILL_BUILD_MUMPS_AND_SCALAPACK = 
abs_builddir = /home/runner/work/oomph-lib/oomph-lib/external_src/oomph_flapack
abs_srcdir = /home/runner/work/oomph-lib/oomph-lib/external_src/oomph_flapack
abs_top_builddir = /home/runner/work/oomph-lib/oomph-lib
abs_top_srcdir = /home/runner/work/oomph-lib/oomph-lib
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = f77
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_cmake = true
have_doxygen = false
have_libtool = true
have_online_triangle = false
have_pdf_latex = true
have_python = true
have_tetgen = false
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/runner/work/oomph-lib/oomph-lib/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/runner/work/oomph-lib/oomph-lib/build
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

# Define the sources
sources = dummy.cc \
cbdsqr.f  cpptrf.f    dlaqps.f  sbdsdc.f    sorm2l.f  zhetrf.f \
cgbbrd.f  cpptri.f    dlaqr0.f  sbdsqr.f    sorm2r.f  zhetri.f \
cgbcon.f  cpptrs.f    dlaqr1.f  scsum1.f    sormbr.f  zhetrs.f \
cgbequ.f  cptcon.f    dlaqr2.f  sdisna.f    sormhr.f  zhgeqz.f \
cgbrfs.f  cpteqr.f    dlaqr3.f  sgbbrd.f    sorml2.f  zhpcon.f \
cgbsv.f   cptrfs.f    dlaqr4.f  sgbcon.f    sormlq.f  zhpevd.f \
cgbsvx.f  cptsv.f     dlaqr5.f  sgbequ.f    sormql.f  zhpev.f \
cgbtf2.f  cptsvx.f    dlaqsb.f  sgbrfs.f    sormqr.f  zhpevx.f \
cgbtrf.f  cpttrf.f    dlaqsp.f  sgbsv.f     sormr2.f  zhpgst.f \
cgbtrs.f  cpttrs.f    dlaqsy.f  sgbsvx.f    sormr3.f  zhpgvd.f \
cgebak.f  cptts2.f    dlaqtr.f  sgbtf2.f    sormrq.f  zhpgv.f \
cgebal.f  crot.f      dlar1v.f  sgbtrf.f    sormrz.f  zhpgvx.f \
cgebd2.f  cspcon.f    dlar2v.f  sgbtrs.f    sormtr.f  zhprfs.f \
cgebrd.f  cspmv.f     dlaran.f  sgebak.f    spbcon.f  zhpsv.f \
cgecon.f  cspr.f      dlarfb.f  sgebal.f    spbequ.f  zhpsvx.f \
cgeequ.f  csprfs.f    dlarf.f   sgebd2.f    spbrfs.f  zhptrd.f \
cgees.f   cspsv.f     dlarfg.f  sgebrd.f    spbstf.f  zhptrf.f \
cgeesx.f  cspsvx.f    dlarft.f  sgecon.f    spbsv.f   zhptri.f \
cgeev.f   csptrf.f    dlarfx.f  sgeequ.f    spbsvx.f  zhptrs.f \
cgeevx.f  csptri.f    dlargv.f  sgees.f     spbtf2.f  zhsein.f \
cgegs.f   csptrs.f    dlarnd.f  sgeesx.f    spbtrf.f  zhseqr.f \
cgegv.f   csrot.f     dlarnv.f  sgeev.f     spbtrs.f  zlabrd.f \
cgehd2.f  csrscl.f    dlarra.f  sgeevx.f    spocon.f  zlacgv.f \
cgehrd.f  cstedc.f    dlarrb.f  sgegs.f     spoequ.f  zlacn2.f \
cgelq2.f  cstegr.f    dlarrc.f  sgegv.f     sporfs.f  zlacon.f \
cgelqf.f  cstein.f    dlarrd.f  sgehd2.f    sposv.f   zlacp2.f \
cgelsd.f  cstemr.f    dlarre.f  sgehrd.f    sposvx.f  zlacpy.f \
cgels.f   csteqr.f    dlarrf.f  sgelq2.f    spotf2.f  zlacrm.f \
cgelss.f  csycon.f    dlarrj.f  sgelqf.f    spotrf.f  zlacrt.f \
cgelsx.f  csymv.f     dlarrk.f  sgelsd.f    spotri.f  zladiv.f \
cgelsy.f  csyr.f      dlarrr.f  sgels.f     spotrs.f  zlaed0.f \
cgeql2.f  csyrfs.f    dlarrv.f  sgelss.f    sppcon.f  zlaed7.f \
cgeqlf.f  csysv.f     dlartg.f  sgelsx.f    sppequ.f  zlaed8.f \
cgeqp3.f  csysvx.f    dlartv.f  sgelsy.f    spprfs.f  zlaein.f \
cgeqpf.f  csytf2.f    dlaruv.f  sgeql2.f    sppsv.f   zlaesy.f \
cgeqr2.f  csytrf.f    dlarzb.f  sgeqlf.f    sppsvx.f  zlaev2.f \
cgeqrf.f  csytri.f    dlarz.f   sgeqp3.f    spptrf.f  zlag2c.f \
cgerfs.f  csytrs.f    dlarzt.f  sgeqpf.f    spptri.f  zlags2.f \
cgerq2.f  ctbcon.f    dlas2.f   sgeqr2.f    spptrs.f  zlagtm.f \
cgerqf.f  ctbrfs.f    dlascl.f  sgeqrf.f    sptcon.f  zlahef.f \
cgesc2.f  ctbtrs.f    dlasd0.f  sgerfs.f    spteqr.f  zlahqr.f \
cgesdd.f  ctgevc.f    dlasd1.f  sgerq2.f    sptrfs.f  zlahr2.f \
cgesvd.f  ctgex2.f    dlasd2.f  sgerqf.f    sptsv.f   zlahrd.f \
cgesv.f   ctgexc.f    dlasd3.f  sgesc2.f    sptsvx.f  zlaic1.f \
cgesvx.f  ctgsen.f    dlasd4.f  sgesdd.f    spttrf.f  zlals0.f \
cgetc2.f  ctgsja.f    dlasd5.f  sgesvd.f    spttrs.f  zlalsa.f \
cgetf2.f  ctgsna.f    dlasd6.f  sgesv.f     sptts2.f  zlalsd.f \
cgetrf.f  ctgsy2.f    dlasd7.f  sgesvx.f    srscl.f   zlangb.f \
cgetri.f  ctgsyl.f    dlasd8.f  sgetc2.f    ssbevd.f  zlange.f \
cgetrs.f  ctpcon.f    dlasda.f  sgetf2.f    ssbev.f   zlangt.f \
cggbak.f  ctprfs.f    dlasdq.f  sgetrf.f    ssbevx.f  zlanhb.f \
cggbal.f  ctptri.f    dlasdt.f  sgetri.f    ssbgst.f  zlanhe.f \
cgges.f   ctptrs.f    dlaset.f  sgetrs.f    ssbgvd.f  zlanhp.f \
cggesx.f  ctrcon.f    dlasq1.f  sggbak.f    ssbgv.f   zlanhs.f \
cggev.f   ctrevc.f    dlasq2.f  sggbal.f    ssbgvx.f  zlanht.f \
cggevx.f  ctrexc.f    dlasq3.f  sgges.f     ssbtrd.f  zlansb.f \
cggglm.f  ctrrfs.f    dlasq4.f  sggesx.f    sspcon.f  zlansp.f \
cgghrd.f  ctrsen.f    dlasq5.f  sggev.f     sspevd.f  zlansy.f \
cgglse.f  ctrsna.f    dlasq6.f  sggevx.f    sspev.f   zlantb.f \
cggqrf.f  ctrsyl.f    dlasr.f   sggglm.f    sspevx.f  zlantp.f \
cggrqf.f  ctrti2.f    dlasrt.f  sgghrd.f    sspgst.f  zlantr.f \
cggsvd.f  ctrtri.f    dlassq.f  sgglse.f    sspgvd.f  zlapll.f \
cggsvp.f  ctrtrs.f    dlasv2.f  sggqrf.f    sspgv.f   zlapmt.f \
cgtcon.f  ctzrqf.f    dlaswp.f  sggrqf.f    sspgvx.f  zlaqgb.f \
cgtrfs.f  ctzrzf.f    dlasy2.f  sggsvd.f    ssprfs.f  zlaqge.f \
cgtsv.f   cung2l.f    dlasyf.f  sggsvp.f    sspsv.f   zlaqhb.f \
cgtsvx.f  cung2r.f    dlatbs.f  sgtcon.f    sspsvx.f  zlaqhe.f \
cgttrf.f  cungbr.f    dlatdf.f  sgtrfs.f    ssptrd.f  zlaqhp.f \
cgttrs.f  cunghr.f    dlatps.f  sgtsv.f     ssptrf.f  zlaqp2.f \
cgtts2.f  cungl2.f    dlatrd.f  sgtsvx.f    ssptri.f  zlaqps.f \
chbevd.f  cunglq.f    dlatrs.f  sgttrf.f    ssptrs.f  zlaqr0.f \
chbev.f   cungql.f    dlatrz.f  sgttrs.f    sstebz.f  zlaqr1.f \
chbevx.f  cungqr.f    dlatzm.f  sgtts2.f    sstedc.f  zlaqr2.f \
chbgst.f  cungr2.f    dlauu2.f  shgeqz.f    sstegr.f  zlaqr3.f \
chbgvd.f  cungrq.f    dlauum.f  shsein.f    sstein.f  zlaqr4.f \
chbgv.f   cungtr.f    dlazq3.f  shseqr.f    sstemr.f  zlaqr5.f \
chbgvx.f  cunm2l.f    dlazq4.f  sisnan.f    ssteqr.f  zlaqsb.f \
chbtrd.f  cunm2r.f    dopgtr.f  slabad.f    ssterf.f  zlaqsp.f \
checon.f  cunmbr.f    dopmtr.f  slabrd.f    sstevd.f  zlaqsy.f \
cheevd.f  cunmhr.f    dorg2l.f  slacn2.f    sstev.f   zlar1v.f \
cheev.f   cunml2.f    dorg2r.f  slacon.f    sstevr.f  zlar2v.f \
cheevr.f  cunmlq.f    dorgbr.f  slacpy.f    sstevx.f  zlarcm.f \
cheevx.f  cunmql.f    dorghr.f  sladiv.f    ssycon.f  zlarfb.f \
chegs2.f  cunmqr.f    dorgl2.f  slae2.f     ssyevd.f  zlarf.f \
chegst.f  cunmr2.f    dorglq.f  slaebz.f    ssyev.f   zlarfg.f \
chegvd.f  cunmr3.f    dorgql.f  slaed0.f    ssyevr.f  zlarft.f \
chegv.f   cunmrq.f    dorgqr.f  slaed1.f    ssyevx.f  zlarfx.f \
chegvx.f  cunmrz.f    dorgr2.f  slaed2.f    ssygs2.f  zlargv.f \
cherfs.f  cunmtr.f    dorgrq.f  slaed3.f    ssygst.f  zlarnv.f \
chesv.f   cupgtr.f    dorgtr.f  slaed4.f    ssygvd.f  zlarrv.f \
chesvx.f  cupmtr.f    dorm2l.f  slaed5.f    ssygv.f   zlartg.f \
chetd2.f  dbdsdc.f    dorm2r.f  slaed6.f    ssygvx.f  zlartv.f \
chetf2.f  dbdsqr.f    dormbr.f  slaed7.f    ssyrfs.f  zlarzb.f \
chetrd.f  ddisna.f    dormhr.f  slaed8.f    ssysv.f   zlarz.f \
chetrf.f  dgbbrd.f    dorml2.f  slaed9.f    ssysvx.f  zlarzt.f \
chetri.f  dgbcon.f    dormlq.f  slaeda.f    ssytd2.f  zlascl.f \
chetrs.f  dgbequ.f    dormql.f  slaein.f    ssytf2.f  zlaset.f \
chgeqz.f  dgbrfs.f    dormqr.f  slaev2.f    ssytrd.f  zlasr.f \
chpcon.f  dgbsv.f     dormr2.f  slaexc.f    ssytrf.f  zlassq.f \
chpevd.f  dgbsvx.f    dormr3.f  slag2d.f    ssytri.f  zlaswp.f \
chpev.f   dgbtf2.f    dormrq.f  slag2.f     ssytrs.f  zlasyf.f \
chpevx.f  dgbtrf.f    dormrz.f  slags2.f    stbcon.f  zlatbs.f \
chpgst.f  dgbtrs.f    dormtr.f  slagtf.f    stbrfs.f  zlatdf.f \
chpgvd.f  dgebak.f    dpbcon.f  slagtm.f    stbtrs.f  zlatps.f \
chpgv.f   dgebal.f    dpbequ.f  slagts.f    stgevc.f  zlatrd.f \
chpgvx.f  dgebd2.f    dpbrfs.f  slagv2.f    stgex2.f  zlatrs.f \
chprfs.f  dgebrd.f    dpbstf.f  slahqr.f    stgexc.f  zlatrz.f \
chpsv.f   dgecon.f    dpbsv.f   slahr2.f    stgsen.f  zlatzm.f \
chpsvx.f  dgeequ.f    dpbsvx.f  slahrd.f    stgsja.f  zlauu2.f \
chptrd.f  dgees.f     dpbtf2.f  slaic1.f    stgsna.f  zlauum.f \
chptrf.f  dgeesx.f    dpbtrf.f  slaisnan.f  stgsy2.f  zmach.f \
chptri.f  dgeev.f     dpbtrs.f  slaln2.f    stgsyl.f  zpbcon.f \
chptrs.f  dgeevx.f    dpocon.f  slals0.f    stpcon.f  zpbequ.f \
chsein.f  dgegs.f     dpoequ.f  slalsa.f    stprfs.f  zpbrfs.f \
chseqr.f  dgegv.f     dporfs.f  slalsd.f    stptri.f  zpbstf.f \
clabrd.f  dgehd2.f    dposv.f   slamch.f    stptrs.f  zpbsv.f \
clacgv.f  dgehrd.f    dposvx.f  slamrg.f    strcon.f  zpbsvx.f \
clacn2.f  dgelq2.f    dpotf2.f  slaneg.f    strevc.f  zpbtf2.f \
clacon.f  dgelqf.f    dpotrf.f  slangb.f    strexc.f  zpbtrf.f \
clacp2.f  dgelsd.f    dpotri.f  slange.f    strrfs.f  zpbtrs.f \
clacpy.f  dgels.f     dpotrs.f  slangt.f    strsen.f  zpocon.f \
clacrm.f  dgelss.f    dppcon.f  slanhs.f    strsna.f  zpoequ.f \
clacrt.f  dgelsx.f    dppequ.f  slansb.f    strsyl.f  zporfs.f \
cladiv.f  dgelsy.f    dpprfs.f  slansp.f    strti2.f  zposv.f \
claed0.f  dgeql2.f    dppsv.f   slanst.f    strtri.f  zposvx.f \
claed7.f  dgeqlf.f    dppsvx.f  slansy.f    strtrs.f  zpotf2.f \
claed8.f  dgeqp3.f    dpptrf.f  slantb.f    stzrqf.f  zpotrf.f \
claein.f  dgeqpf.f    dpptri.f  slantp.f    stzrzf.f  zpotri.f \
claesy.f  dgeqr2.f    dpptrs.f  slantr.f    xerbla.f  zpotrs.f \
claev2.f  dgeqrf.f    dptcon.f  slanv2.f    xlaenv.f  zppcon.f \
clag2z.f  dgerfs.f    dpteqr.f  slapll.f    zbdsqr.f  zppequ.f \
clags2.f  dgerq2.f    dptrfs.f  slapmt.f    zcgesv.f  zpprfs.f \
clagtm.f  dgerqf.f    dptsv.f   slaptm.f    zdrot.f   zppsv.f \
clahef.f  dgesc2.f    dptsvx.f  slapy2.f    zdrscl.f  zppsvx.f \
clahqr.f  dgesdd.f    dpttrf.f  slapy3.f    zdscal.f  zpptrf.f \
clahr2.f  dgesvd.f    dpttrs.f  slaqgb.f    zgbbrd.f  zpptri.f \
clahrd.f  dgesv.f     dptts2.f  slaqge.f    zgbcon.f  zpptrs.f \
claic1.f  dgesvx.f    drscl.f   slaqp2.f    zgbequ.f  zptcon.f \
clals0.f  dgetc2.f    dsbevd.f  slaqps.f    zgbrfs.f  zpteqr.f \
clalsa.f  dgetf2.f    dsbev.f   slaqr0.f    zgbsv.f   zptrfs.f \
clalsd.f  dgetrf.f    dsbevx.f  slaqr1.f    zgbsvx.f  zptsv.f \
clangb.f  dgetri.f    dsbgst.f  slaqr2.f    zgbtf2.f  zptsvx.f \
clange.f  dgetrs.f    dsbgvd.f  slaqr3.f    zgbtrf.f  zpttrf.f \
clangt.f  dggbak.f    dsbgv.f   slaqr4.f    zgbtrs.f  zpttrs.f \
clanhb.f  dggbal.f    dsbgvx.f  slaqr5.f    zgebak.f  zptts2.f \
clanhe.f  dgges.f     dsbtrd.f  slaqsb.f    zgebal.f  zrot.f \
clanhp.f  dggesx.f    dsgesv.f  slaqsp.f    zgebd2.f  zspcon.f \
clanhs.f  dggev.f     dspcon.f  slaqsy.f    zgebrd.f  zspmv.f \
clanht.f  dggevx.f    dspevd.f  slaqtr.f    zgecon.f  zspr.f \
clansb.f  dggglm.f    dspev.f   slar1v.f    zgeequ.f  zsprfs.f \
clansp.f  dgghrd.f    dspevx.f  slar2v.f    zgees.f   zspsv.f \
clansy.f  dgglse.f    dspgst.f  slaran.f    zgeesx.f  zspsvx.f \
clantb.f  dggqrf.f    dspgvd.f  slarfb.f    zgeev.f   zsptrf.f \
clantp.f  dggrqf.f    dspgv.f   slarf.f     zgeevx.f  zsptri.f \
clantr.f  dggsvd.f    dspgvx.f  slarfg.f    zgegs.f   zsptrs.f \
clapll.f  dggsvp.f    dsprfs.f  slarft.f    zgegv.f   zstedc.f \
clapmt.f  dgtcon.f    dspsv.f   slarfx.f    zgehd2.f  zstegr.f \
claqgb.f  dgtrfs.f    dspsvx.f  slargv.f    zgehrd.f  zstein.f \
claqge.f  dgtsv.f     dsptrd.f  slarnd.f    zgelq2.f  zstemr.f \
claqhb.f  dgtsvx.f    dsptrf.f  slarnv.f    zgelqf.f  zsteqr.f \
claqhe.f  dgttrf.f    dsptri.f  slarra.f    zgelsd.f  zsycon.f \
claqhp.f  dgttrs.f    dsptrs.f  slarrb.f    zgels.f   zsymv.f \
claqp2.f  dgtts2.f    dstebz.f  slarrc.f    zgelss.f  zsyr.f \
claqps.f  dhgeqz.f    dstedc.f  slarrd.f    zgelsx.f  zsyrfs.f \
claqr0.f  dhsein.f    dstegr.f  slarre.f    zgelsy.f  zsysv.f \
claqr1.f  dhseqr.f    dstein.f  slarrf.f    zgeql2.f  zsysvx.f \
claqr2.f  disnan.f    dstemr.f  slarrj.f    zgeqlf.f  zsytf2.f \
claqr3.f  dlabad.f    dsteqr.f  slarrk.f    zgeqp3.f  zsytrf.f \
claqr4.f  dlabrd.f    dsterf.f  slarrr.f    zgeqpf.f  zsytri.f \
claqr5.f  dlacn2.f    dstevd.f  slarrv.f    zgeqr2.f  zsytrs.f \
claqsb.f  dlacon.f    dstev.f   slartg.f    zgeqrf.f  ztbcon.f \
claqsp.f  dlacpy.f    dstevr.f  slartv.f    zgerfs.f  ztbrfs.f \
claqsy.f  dladiv.f    dstevx.f  slaruv.f    zgerq2.f  ztbtrs.f \
clar1v.f  dlae2.f     dsycon.f  slarzb.f    zgerqf.f  ztgevc.f \
clar2v.f  dlaebz.f    dsyevd.f  slarz.f     zgesc2.f  ztgex2.f \
clarcm.f  dlaed0.f    dsyev.f   slarzt.f    zgesdd.f  ztgexc.f \
clarfb.f  dlaed1.f    dsyevr.f  slas2.f     zgesvd.f  ztgsen.f \
clarf.f   dlaed2.f    dsyevx.f  slascl.f    zgesv.f   ztgsja.f \
clarfg.f  dlaed3.f    dsygs2.f  slasd0.f    zgesvx.f  ztgsna.f \
clarft.f  dlaed4.f    dsygst.f  slasd1.f    zgetc2.f  ztgsy2.f \
clarfx.f  dlaed5.f    dsygvd.f  slasd2.f    zgetf2.f  ztgsyl.f \
clargv.f  dlaed6.f    dsygv.f   slasd3.f    zgetrf.f  ztpcon.f \
clarnv.f  dlaed7.f    dsygvx.f  slasd4.f    zgetri.f  ztprfs.f \
clarrv.f  dlaed8.f    dsyrfs.f  slasd5.f    zgetrs.f  ztptri.f \
clartg.f  dlaed9.f    dsysv.f   slasd6.f    zggbak.f  ztptrs.f \
clartv.f  dlaeda.f    dsysvx.f  slasd7.f    zggbal.f  ztrcon.f \
clarzb.f  dlaein.f    dsytd2.f  slasd8.f    zgges.f   ztrevc.f \
clarz.f   dlaev2.f    dsytf2.f  slasda.f    zggesx.f  ztrexc.f \
clarzt.f  dlaexc.f    dsytrd.f  slasdq.f    zggev.f   ztrrfs.f \
clascl.f  dlag2.f     dsytrf.f  slasdt.f    zggevx.f  ztrsen.f \
claset.f  dlag2s.f    dsytri.f  slaset.f    zggglm.f  ztrsna.f \
clasr.f   dlags2.f    dsytrs.f  slasq1.f    zgghrd.f  ztrsyl.f \
classq.f  dlagtf.f    dtbcon.f  slasq2.f    zgglse.f  ztrti2.f \
claswp.f  dlagtm.f    dtbrfs.f  slasq3.f    zggqrf.f  ztrtri.f \
clasyf.f  dlagts.f    dtbtrs.f  slasq4.f    zggrqf.f  ztrtrs.f \
clatbs.f  dlagv2.f    dtgevc.f  slasq5.f    zggsvd.f  ztzrqf.f \
clatdf.f  dlahqr.f    dtgex2.f  slasq6.f    zggsvp.f  ztzrzf.f \
clatps.f  dlahr2.f    dtgexc.f  slasr.f     zgtcon.f  zung2l.f \
clatrd.f  dlahrd.f    dtgsen.f  slasrt.f    zgtrfs.f  zung2r.f \
clatrs.f  dlaic1.f    dtgsja.f  slassq.f    zgtsv.f   zungbr.f \
clatrz.f  dlaisnan.f  dtgsna.f  slasv2.f    zgtsvx.f  zunghr.f \
clatzm.f  dlaln2.f    dtgsy2.f  slaswp.f    zgttrf.f  zungl2.f \
clauu2.f  dlals0.f    dtgsyl.f  slasy2.f    zgttrs.f  zunglq.f \
clauum.f  dlalsa.f    dtpcon.f  slasyf.f    zgtts2.f  zungql.f \
cmach.f   dlalsd.f    dtprfs.f  slatbs.f    zhbevd.f  zungqr.f \
cpbcon.f  dlamch.f    dtptri.f  slatdf.f    zhbev.f   zungr2.f \
cpbequ.f  dlamrg.f    dtptrs.f  slatps.f    zhbevx.f  zungrq.f \
cpbrfs.f  dlaneg.f    dtrcon.f  slatrd.f    zhbgst.f  zungtr.f \
cpbstf.f  dlangb.f    dtrevc.f  slatrs.f    zhbgvd.f  zunm2l.f \
cpbsv.f   dlange.f    dtrexc.f  slatrz.f    zhbgv.f   zunm2r.f \
cpbsvx.f  dlangt.f    dtrrfs.f  slatzm.f    zhbgvx.f  zunmbr.f \
cpbtf2.f  dlanhs.f    dtrsen.f  slauu2.f    zhbtrd.f  zunmhr.f \
cpbtrf.f  dlansb.f    dtrsna.f  slauum.f    zhecon.f  zunml2.f \
cpbtrs.f  dlansp.f    dtrsyl.f  slazq3.f    zheevd.f  zunmlq.f \
cpocon.f  dlanst.f    dtrti2.f  slazq4.f    zheev.f   zunmql.f \
cpoequ.f  dlansy.f    dtrtri.f  sopgtr.f    zheevr.f  zunmqr.f \
cporfs.f  dlantb.f    dtrtrs.f  sopmtr.f    zheevx.f  zunmr2.f \
cposv.f   dlantp.f    dtzrqf.f  sorg2l.f    zhegs2.f  zunmr3.f \
cposvx.f  dlantr.f    dtzrzf.f  sorg2r.f    zhegst.f  zunmrq.f \
cpotf2.f  dlanv2.f    dzsum1.f  sorgbr.f    zhegvd.f  zunmrz.f \
cpotrf.f  dlapll.f    icmax1.f  sorghr.f    zhegv.f   zunmtr.f \
cpotri.f  dlapmt.f    ieeeck.f  sorgl2.f    zhegvx.f  zupgtr.f \
cpotrs.f  dlaptm.f    ilaenv.f  sorglq.f    zherfs.f  zupmtr.f \
cppcon.f  dlapy2.f    ilaver.f  sorgql.f    zhesv.f \
cppequ.f  dlapy3.f    iparmq.f  sorgqr.f    zhesvx.f \
cpprfs.f  dlaqgb.f    izmax1.f  sorgr2.f    zhetd2.f \
cppsv.f   dlaqge.f    lsame.f   sorgrq.f    zhetf2.f \
cppsvx.f  dlaqp2.f    lsamen.f  sorgtr.f    zhetrd.f \
clarnd.f  zlarnd.f


# Define name of library
libname = oomph_flapack

# Combine headers and sources
headers_and_sources = $(sources)

# Define the library that gets placed in lib directory
#-----------------------------------------------------
lib_LTLIBRARIES = liboomph_flapack.la

# Sources that the library depends on:
#-------------------------------------
liboomph_flapack_la_SOURCES = $(headers_and_sources)
#Definitely no optimisation, but still warnings
liboomph_flapack_non_opt_la_FFLAGS = "-O0"

# The library's include headers:
#-------------------------------
# Headers that are to be included in the $(includedir) directory:
# This is the combined header which contains "#include<...>" commands
# for the real headers in the subdirectory below  $(includedir)
include_HEADERS = $(libname).h

#Here's the subdirectory where the actual header files are placed
library_includedir = $(includedir)/oomph_flapack
#endif
#liboomph_flapack_la_LIBADD = -lgfortran
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign external_src/oomph_flapack/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign external_src/oomph_flapack/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

liboomph_flapack.la: $(liboomph_flapack_la_OBJECTS) $(liboomph_flapack_la_DEPENDENCIES) $(EXTRA_liboomph_flapack_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(liboomph_flapack_la_OBJECTS) $(liboomph_flapack_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dummy.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/dummy.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/dummy.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-data-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-hook install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# Automake doesn't have a way to build with no optimization
# See http://sources.redhat.com/ml/automake/2002-08/msg00082.html
# This is the automake-produced rule with $(FFLAGS) removed
slamch.lo: slamch.f
	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(FFLAGS_NO_OPT) -c -o slamch.lo `test -f 'slamch.f' || echo '$(srcdir)/'`slamch.f
dlamch.lo: dlamch.f
	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(FFLAGS_NO_OPT) -c -o dlamch.lo `test -f 'dlamch.f' || echo '$(srcdir)/'`dlamch.f

#These are the header files that are to be placed in subdirectory: **NONE**
#library_include_HEADERS=$(headers)

# Combined header file **NONE**
#---------------------
# Rule for building combined header (dummy target never gets made so
# the combined header is remade every time
#$(libname).h: dummy_$(libname).h

# **NONE**
# When building the combined header, we also create a symbolic
# link to it from the directory above this one, so that
# it can be used by other libaries (before "make install" is run)
# in exactly the same way as after its installation in the include
# directory. (After the installation, the combined header lives
# in the directory above the actual individual header files)
#dummy_$(libname).h:  $(headers)
#	echo  $(libname) $(headers) > all_$(libname).aux
#	$(AWK) -f $(top_builddir)/bin/headers.awk < \
#	          all_$(libname).aux > $(libname).h
#	rm all_$(libname).aux
#	rm -f ../$(libname).h 
#	(cd .. && $(LN_S) $(libname)/$(libname).h $(libname).h)

#**NONE**
# Extra hook for install: Optionally replace headers by symbolic links
#---------------------------------------------------------------------
#if SYMBOLIC_LINKS_FOR_HEADERS
#install-data-hook: 
#	(cd $(library_includedir) && rm -f $(headers) )
#	(echo "$(headers)" > include_files.list )
#	($(top_builddir)/bin/change_headers_to_links.sh `pwd`)
#	($(LN_S) `cat include_files.list.aux` $(library_includedir) )
#	(rm -r include_files.list.aux include_files.list ) 
#else
install-data-hook: 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
